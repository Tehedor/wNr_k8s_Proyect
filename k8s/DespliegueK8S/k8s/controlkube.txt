

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of the control-plane node running the following command on each as root:

  kubeadm join kservice.lab.local:6443 --token pbopev.f19tqtz8hx32v2v3 \
        --discovery-token-ca-cert-hash sha256:936f166db3ccbf15d3157cac3bfc635ec81fd7ef72ca71973728d5c34ad3908e \
        --control-plane --certificate-key 67e26a531cdb55da81c7f95a638e21c2c461b36e70d42d81991417653899c348

sudo   kubeadm join kservice.lab.local:6443 --token pbopev.f19tqtz8hx32v2v3         --discovery-token-ca-cert-hash sha256:936f166db3ccbf15d3157cac3bfc635ec81fd7ef72ca71973728d5c34ad3908e         --control-plane --certificate-key 67e26a531cdb55da81c7f95a638e21c2c461b36e70d42d81991417653899c348

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

sudo kubeadm join kservice.lab.local:6443 --token pbopev.f19tqtz8hx32v2v3         --discovery-token-ca-cert-hash sha256:936f166db3ccbf15d3157cac3bfc635ec81fd7ef72ca71973728d5c34ad3908e